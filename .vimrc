set nocompatible              " be iMproved, requiredfiletype off                  " requiredset ffs=mac" set the runtime path to include Vundle and initializeset rtp+=~/.vim/bundle/Vundle.vimcall vundle#begin()" " alternatively, pass a path where Vundle should install plugins" "call vundle#begin('~/some/path/here')"" " let Vundle manage Vundle, requiredPlugin 'gmarik/Vundle.vim'"" " The following are examples of different formats supported." " Keep Plugin commands between vundle#begin/end." " plugin on GitHub repoPlugin 'tpope/vim-fugitive'" " plugin from http://vim-scripts.org/vim/scripts.htmlPlugin 'L9'" " Git plugin not hosted on GitHubPlugin 'git://git.wincent.com/command-t.git'" " The sparkup vim script is in a subdirectory of this repo called vim." " Pass the path to set the runtimepath properly.Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}" " Avoid a name conflict with L9"" " All of your Plugins must be added before the following linePlugin 'tpope/vim-surround'Plugin 'terryma/vim-multiple-cursors.git'Plugin 'msanders/snipmate.vim'Plugin 'zenorocha/dracula-theme', {'rtp': 'vim/'}call vundle#end()            " requiredfiletype plugin indent on    " required" Mappings:imap jk <Esc>:imap ii <Esc>:nmap ; :let mapleader=","" source $MYVIMRC reloads the saved $MYVIMRC:nmap <Leader>s :source $MYVIMRC" opens $MYVIMRC for editing, or use :tabedit $MYVIMRC:nmap <Leader>v :e $MYVIMRCmap <space> /nnoremap j gjnnoremap k gk" Basicsset nocompatible " explicitly get out of vi-compatible modeset noexrc " don't use local version of .(g)vimrc, .exrc" Generalfiletype plugin indent on " load filetype plugins/indent settings"set autochdir " always switch to the current file directoryset tabstop=4set shiftwidth=4set softtabstop=4set smarttabset expandtabset backspace=indent,eol,start " make backspace a more flexibleset backup " make backup files    set background=dark " we plan to use a dark backgroundset fenc=utf-8 " UTF-8syntax on " syntax highlighting onset mouse=a " use mouse everywhereset noerrorbells " don't make noiseset wildmenu " turn on command line completion wild styleset wildignore=*.dll,*.o,*.obj,*.bak,*.exe,*.pyc,*.jpg,*.gif,*.png " ignore these list file extensionsset wildmode=list:longest " turn on wild mode huge list" Vim UIset incsearch " BUT do highlight as you type you search phraseset laststatus=2 " always show the status lineset lazyredraw " do not redraw while running macrosset linespace=0 " don't insert any extra pixel lines betweens rowsset list " we do what to show tabs, to ensure we get them out of my filesset listchars=tab:>-,trail:- " show tabs and trailingset matchtime=5 " how many tenths of a second to blink matching brackets forset nohlsearch " do not highlight searched for phrasesset nostartofline " leave my cursor where it wasset novisualbell " don't blinkset number " turn on line numbersset numberwidth=5 " We are good up to 99999 linesset report=0 " tell us when anything is changed via :...set ruler " Always show current positions along the bottomset scrolloff=10 " Keep 10 lines (top/bottom) for scopeset shortmess=aOstT " shortens messages to avoid 'press a key' promptset showcmd " show the command being typedset showmatch " show matching bracketsset sidescrolloff=10 " Keep 5 lines at the sizeset ignorecase " case insensitive by default" Colorcolorscheme Dracula " Turn backup off, since most stuff is in SVN, git et.c anyway...set nobackupset nowbset noswapfilefunction! RenameFile()    let old_name = expand('%')    let new_name = input('New file name: ', expand('%'), 'file')    if [new_name != '' && new_name != old_name]        exec ':saveas ' . new_name        exec ':silent !rm ' . old_name        redraw!    endifendfunctionmap <leader>r :call RenameFile()<cr>" UtilSnip Leaderslet g:UltiSnipsExpandTrigger="<tab>"let g:UltiSnipsJumpForwardTrigger="<c-b>"let g:UltiSnipsJumpBackwardTrigger="<c-z>"